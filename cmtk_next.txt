# https://stackoverflow.com/questions/12344368/automatically-use-the-directory-as-the-project-name-in-cmake

cmtk_devspace:
@TODO Put on Github projet cmtk_devspace
  .cmtk is a submodule
  .Change cppexe, cpputil, cmtkt-cpphutil -> cmtk_tests-cpp_exec, cmtk_tests-cpp_util, cmtk_tests-cpp_hutil
    .namespace cmtk_tests
    !make more sense in these projects (use the dependencies...)
  .Add awesome_executable, awesome_utility, awesome_honly_utility
    .namespace is empty
  .Add cmtk_tests-alphabet (multi project library to test trioption and option_or_set_ifdef)
    .namespace cmtk_tests
    .Add cmtk_tests-alpha
    .Add cmtk_tests-beta
  .Add testable_executable
    .static library or object passed to executable tests, main executable.

cmtk:
.v0.8:
  .New function add_rsc_cpp_library().
.v0.9:
  .New API for add_cpp_executable().
  .Remove deprecated generating functions (like generate_verbose_library_config_file(), ...).
  .Improve README.
.backlog:
  .set_build_type_ifndef() -> Replace by set_buid_type_ifndef([TYPES Release Debug ...] [DEFAULT 0|Release])
  (Would be good to understand Ninja-MultiConfig and see if set_buid_type_ifndef() as still sense or if it would be good to adapt it.)
  .Add option in generate_macro_version_header: BUILD_HEADERS_BASE_DIR

git/bash/py:
  .automatisation monter version cmake cpp project
  .automatisation finish release
  .automatisation update cmtk version
  .automatisation update subprojects versions

cmakepj:
  .Successor of cmtkgen

cmtkgen:
  .If hearder_only lib no target-static comment generated

-----

appt_version<2,1,0>
using current_appt_version = appt_version<>
if constexpr appt_version<>() < appt_version<2,1,0>()

semversion
